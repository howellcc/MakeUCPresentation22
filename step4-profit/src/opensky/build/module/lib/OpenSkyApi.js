'use strict';
import axios from 'axios';
import { URLSearchParams } from 'iso-url';
import { stateVectorMapper } from '../mappers/StateVectorMapper';
const axiosConfig = {
    timeout: 5000,
    headers: { 'User-Agent': 'OpenSkyApi-TS/1.0' },
};
export class OpenSkyApi {
    constructor(credentials) {
        this.authenticated = false;
        this.lastRequestTime = {
            GET_STATES: null,
            GET_MY_STATES: null,
            GET_FLIGHTS: null,
        };
        if (credentials?.username && credentials?.password) {
            axiosConfig.auth = {
                username: credentials?.username,
                password: credentials?.password,
            };
            this.authenticated = true;
        }
        this._axios = axios.create(axiosConfig);
    }
    getFlightsByAircraft(icao24, beginTime, endTime) {
        const nvps = [];
        if (beginTime) {
            nvps.push({ begin: String(beginTime) });
        }
        if (endTime) {
            nvps.push({ end: String(endTime) });
        }
        if (icao24) {
            nvps.push({ icao24: icao24 });
        }
        return this.getOpenSkyFlightsByAircraft(OpenSkyApi.FLIGHTS_BY_AIRCRAFT_URI, nvps);
    }
    getStates(time, icao24, bbox) {
        const nvps = [];
        if (time) {
            nvps.push({ time: String(time) });
        }
        icao24?.forEach((i) => {
            nvps.push({ icao24: i });
        });
        if (bbox) {
            nvps.push({ lamin: String(bbox.minLatitude) });
            nvps.push({ lamax: String(bbox.maxLatitude) });
            nvps.push({ lomin: String(bbox.minLongitude) });
            nvps.push({ lomax: String(bbox.maxLongitude) });
        }
        if (this.checkRateLimit('GET_STATES', 4900, 9900)) {
            return this.getOpenSkyStates(OpenSkyApi.STATES_URI, nvps);
        }
        return null;
    }
    getMyStates(time, icao24, serials) {
        if (!this.authenticated) {
            throw new Error("Anonymous access of 'myStates' not allowed");
        }
        const nvps = [];
        if (time) {
            nvps.push({ time: String(time) });
        }
        icao24?.forEach((i) => {
            nvps.push({ icao24: i });
        });
        serials?.forEach((s) => {
            nvps.push({ serials: String(s) });
        });
        if (this.checkRateLimit('GET_MY_STATES', 900, 0)) {
            return this.getOpenSkyStates(OpenSkyApi.MY_STATES_URI, nvps);
        }
        return null;
    }
    async getOpenSkyStates(url, nvps) {
        const params = new URLSearchParams();
        nvps.forEach((i) => {
            for (const [key, value] of Object.entries(i)) {
                params.append(key, value);
            }
        });
        const { data } = await this._axios.get(url, {
            params,
        });
        const states = data?.states?.map((state) => stateVectorMapper(state)) || [];
        return {
            time: data.time,
            states,
        };
    }
    async getOpenSkyFlightsByAircraft(url, nvps) {
        const params = new URLSearchParams();
        nvps.forEach((i) => {
            for (const [key, value] of Object.entries(i)) {
                params.append(key, value);
            }
        });
        try {
            const data = await this._axios.get(url, {
                params,
            });
            if (Array.isArray(data?.data)) {
                return data.data;
            }
        }
        catch (x) { }
        return new Array();
    }
    checkRateLimit(type, timeDiffAuth, timeDiffNoAuth) {
        const t = this.lastRequestTime[type];
        const now = Date.now();
        this.lastRequestTime[type] = now;
        return (t == null ||
            (this.authenticated && now - t > timeDiffAuth) ||
            (!this.authenticated && now - t > timeDiffNoAuth));
    }
}
OpenSkyApi.HOST = 'opensky-network.org';
OpenSkyApi.API_ROOT = `https://${OpenSkyApi.HOST}/api`;
OpenSkyApi.STATES_URI = `${OpenSkyApi.API_ROOT}/states/all`;
OpenSkyApi.MY_STATES_URI = `${OpenSkyApi.API_ROOT}/states/own`;
OpenSkyApi.FLIGHTS_BY_AIRCRAFT_URI = `${OpenSkyApi.API_ROOT}/flights/aircraft`;
export { BoundingBox } from './BoundingBox';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3BlblNreUFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvT3BlblNreUFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUE7QUFFWixPQUFPLEtBQW9DLE1BQU0sT0FBTyxDQUFBO0FBQ3hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxTQUFTLENBQUE7QUFFekMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sOEJBQThCLENBQUE7QUFRaEUsTUFBTSxXQUFXLEdBQXVCO0lBQ3RDLE9BQU8sRUFBRSxJQUFJO0lBQ2IsT0FBTyxFQUFFLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixFQUFFO0NBQy9DLENBQUE7QUFFRCxNQUFNLE9BQU8sVUFBVTtJQWlCckIsWUFBWSxXQUF5QjtRQVI3QixrQkFBYSxHQUFHLEtBQUssQ0FBQTtRQUVyQixvQkFBZSxHQUF1QztZQUM1RCxVQUFVLEVBQUUsSUFBSTtZQUNoQixhQUFhLEVBQUUsSUFBSTtZQUNuQixXQUFXLEVBQUUsSUFBSTtTQUNsQixDQUFBO1FBR0MsSUFBSSxXQUFXLEVBQUUsUUFBUSxJQUFJLFdBQVcsRUFBRSxRQUFRLEVBQUU7WUFDbEQsV0FBVyxDQUFDLElBQUksR0FBRztnQkFDakIsUUFBUSxFQUFFLFdBQVcsRUFBRSxRQUFRO2dCQUMvQixRQUFRLEVBQUUsV0FBVyxFQUFFLFFBQVE7YUFDaEMsQ0FBQTtZQUNELElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFBO1NBQzFCO1FBRUQsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFBO0lBQ3pDLENBQUM7SUFFTSxvQkFBb0IsQ0FDekIsTUFBcUIsRUFDckIsU0FBd0IsRUFDeEIsT0FBc0I7UUFFdEIsTUFBTSxJQUFJLEdBQWtDLEVBQUUsQ0FBQTtRQUU5QyxJQUFJLFNBQVMsRUFBRTtZQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxL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